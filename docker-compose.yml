services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: manufactura-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: manufactura_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-1317}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - manufactura-network

  # Aplicación principal (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: manufactura-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: manufactura_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      VITE_DB_HOST: postgres
      VITE_DB_PORT: 5432
      VITE_DB_NAME: manufactura_db
      VITE_DB_USER: postgres
      VITE_DB_PASSWORD: ${DB_PASSWORD:-postgres123}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - manufactura-network

  # n8n para automatización de workflows
  n8n:
    image: n8nio/n8n:latest
    container_name: manufactura-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin123}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Lima
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD:-postgres123}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    networks:
      - manufactura-network

  # Nginx como reverse proxy (opcional pero recomendado para producción)
  nginx:
    image: nginx:alpine
    container_name: manufactura-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - n8n
    networks:
      - manufactura-network

networks:
  manufactura-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
